# .github/workflows/streamlit-frontend-deploy.yml
name: Deploy Streamlit Frontend to Azure App Service

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    env:
      AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
      AZURE_WEBAPP_RG: ${{ secrets.AZURE_WEBAPP_RG }}
      AZURE_WEBAPP_PLAN: ${{ secrets.AZURE_WEBAPP_PLAN }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Archive Streamlit app
        run: |
          zip -r streamlit-frontend.zip .

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          CREDS: ${{ secrets.AZURE_LOGIN_SP_CREDENTIALS }}

      - name: Ensure Resource Group Exists
        run: |
          az group show --name rg-tfstate || az group create --name "rg-tfstate" --location "EastUS"

      - name: Ensure App Service Plan Exists
        run: |
          if [ -z "$AZURE_WEBAPP_PLAN" ]; then
            echo "AZURE_WEBAPP_PLAN is not set!" && exit 1
          fi
          if ! az appservice plan show --name "$AZURE_WEBAPP_PLAN" --resource-group rg-tfstate; then
            az appservice plan create --name "$AZURE_WEBAPP_PLAN" --resource-group rg-tfstate --sku B1 --is-linux
          fi

      - name: Ensure Web App Exists
        run: |
          az webapp show --name $AZURE_WEBAPP_NAME --resource-group "rg-tfstate" || \
          az webapp create --name $AZURE_WEBAPP_NAME --resource-group "rg-tfstate" --plan $AZURE_WEBAPP_PLAN --runtime "PYTHON:3.11"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'production'
          package: streamlit-frontend.zip

      - name: Post deployment - Show Web App URL
        run: |
          echo "Deployed to: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
