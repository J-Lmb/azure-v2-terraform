# .github/workflows/terraform-deploy-version2.yml
name: Deploy ARGUS (Provision if Missing)

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Plan & Apply (Version 2)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./infra
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          CREDS: ${{ secrets.AZURE_LOGIN_SP_CREDENTIALS }}

    
      - name: Terraform Init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

          # Terraform variables come in as TF_VAR_<var_name>
          TF_VAR_azure_openai_endpoint:              ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          TF_VAR_azure_openai_key:                   ${{ secrets.AZURE_OPENAI_KEY }}
          TF_VAR_azure_openai_model_deployment_name: ${{ secrets.AZURE_OPENAI_MODEL_DEPLOYMENT_NAME }}

        run: terraform init

      - name: Terraform Validate
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

          # Terraform variables come in as TF_VAR_<var_name>
          TF_VAR_azure_openai_endpoint:              ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          TF_VAR_azure_openai_key:                   ${{ secrets.AZURE_OPENAI_KEY }}
          TF_VAR_azure_openai_model_deployment_name: ${{ secrets.AZURE_OPENAI_MODEL_DEPLOYMENT_NAME }}
        run: terraform validate

      - name: Terraform Plan
        #run: terraform plan -lock=false -input=false -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" -var-file="terraform.tfvars"
        run: |
          terraform plan \
            -lock=false \
            -input=false \
            -var="client_id=${{ secrets.ARM_CLIENT_ID }}" \
            -var="client_secret=${{ secrets.ARM_CLIENT_SECRET }}" \
            -var="tenant_id=${{ secrets.ARM_TENANT_ID }}" \
            -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" \
            -var="azure_openai_endpoint=${{ secrets.AZURE_OPENAI_ENDPOINT }}" \
            -var="azure_openai_key=${{ secrets.AZURE_OPENAI_KEY }}" \
            -var="azure_openai_model_deployment_name=${{ secrets.AZURE_OPENAI_MODEL_DEPLOYMENT_NAME }}" \
            -var-file="terraform.tfvars"
            

      - name: Terraform Apply
        #run: terraform apply -auto-approve -lock=false -input=false -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" -var-file="terraform.tfvars"
        run: |
          terraform apply -auto-approve \
            -lock=false \
            -input=false \
            -var="client_id=${{ secrets.ARM_CLIENT_ID }}" \
            -var="client_secret=${{ secrets.ARM_CLIENT_SECRET }}" \
            -var="tenant_id=${{ secrets.ARM_TENANT_ID }}" \
            -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" \
            -var="azure_openai_endpoint=${{ secrets.AZURE_OPENAI_ENDPOINT }}" \
            -var="azure_openai_key=${{ secrets.AZURE_OPENAI_KEY }}" \
            -var="azure_openai_model_deployment_name=${{ secrets.AZURE_OPENAI_MODEL_DEPLOYMENT_NAME }}" \
            -var-file="terraform.tfvars"
